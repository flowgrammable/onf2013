// Copyright (c) 2013 Flowgrammable, LLC.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
// 
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an "AS IS"
// BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied. See the License for the specific language governing
// permissions and limitations under the License.

/////////////////////////////////////////////////
// Controller Configuration 
/////////////////////////////////////////////////

realm = Realm {
  address = Addresses{           // set of addresses to listen on
    tcp 10.1.1.1|10000,         // ipv4|fqdn address on tcp port 10000
    tls 1.1.1.1,
    tls 2001:db8::ff00:42:8329,   // ipv6|fqdn address on default tls port
    tls 1::                       //
  },
  private_key = "<private key>"     // private key for local identity assertion
}

authentication = Authentication {
  public_keys = x509 {                 // public keys for remote identity assertion
    "pub_key1", 
    "pub_key2",
    "pub_key3" 
  },
  acl = ACL {                   // ipv4 and ipv6 whitelist for remote identity  
    10.1.1.0/24,
    2001:db8::ff00:42:8329/64
  }
}

authorization = Authorization {
  tcp_max = 100,                // only 100 simultaneous tcp connections allowed
  tls_max = 10                 // only 10 simultaneous tls connections allowed
}

initialization = Initialization {
  opf = OFP { 
    version = 1.3.1,
    advertise = Advertise{ 1.0, 1.1},
    echo_interval = 2s,       // use a 2 second echo interval
    echo_miss = 2,            // count 2 echo misses as failure
    hello_timeout = 3s,       // hello time-out
    app = "app1"              // load and start these openflow apps
  }
}

realm->authentication          // valid connections move to authentication
authentication->authorization  // valid authentication moves to authorization
authorization->initialization  // valid authorization moves to initialization

//authorization->(ofp or ofp2)
//realm->(pete or steve or jake)->authorization
//(pete and steve)->auth1
//jake->auth2
